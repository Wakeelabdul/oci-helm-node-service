version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  variables:
    key: "value"
  vaultVariables:
  exportedVariables:
    - BUILDRUN_HASH

steps:
  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 40
    command: |
      export BUILDRUN_HASH=$(echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7)
      echo "BUILDRUN_HASH: $BUILDRUN_HASH"

  - type: Command
    timeoutInSeconds: 600
    name: "Install Node Prereqs"
    command: |
      cd node_express
      ls
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      nvm install lts/erbium
      echo "NODE VERSION: $(node -v)"
      echo "NPM VERSION: $(npm -v)"

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root

  - type: Command
    timeoutInSeconds: 600
    name: "NPM install"
    command: |
      cd node_express
      npm install

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root

  - type: Command
    timeoutInSeconds: 1200
    name: "Run Tests"
    command: |
      cd node_express
      ls
      npm test

  - type: Command
    timeoutInSeconds: 1200
    name: "Helm Build"
    command: |
      cd node_express/helm/node-service || exit 1
      echo "Current Working Directory (Helm Build): $(pwd)"
      echo "Contents of the Directory (Helm Build):"
      ls

      export BUILDRUN_HASH=${BUILDRUN_HASH}
      originalChartfile="Chart.yaml"
      tmpChartfile=$(mktemp)
      cp --attributes-only --preserve $originalChartfile $tmpChartfile
      cat $originalChartfile | envsubst > $tmpChartfile && mv $tmpChartfile $originalChartfile
      cat Chart.yaml
      helm package .
      helm registry login ${HELM_REPO} -u ${HELM_REPO_USER} -p ${USER_AUTH_TOKEN}
      helm push *.tgz ${HELM_REPO_URL}

  - type: Command
    timeoutInSeconds: 1200
    name: "Build container image"
    command: |
      cd node_express
      docker build --pull --rm -t jed-dop-lab18-1-ocir-1/node-service-awakeel .

outputArtifacts:
  - name: APPLICATION_DOCKER_IMAGE
    type: DOCKER_IMAGE
    location: jed-dop-lab18-1-ocir-1/node-service-awakeel:latest
